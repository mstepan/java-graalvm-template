# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Build and Test

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up GraalVM 25
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '25'
          distribution: 'graalvm'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean verify --file pom.xml

      # TODO: not working
      # Fatal error: jdk.graal.compiler.graph.GraalGraphError: com.oracle.svm.core.util.VMError$HostedError: No offset for field HostedField<BrokenSpinLockCounter.locked -> AnalysisField<BrokenSpinLockCounter.locked -> HotSpotResolvedJavaFieldImpl<com.github.mstepan.template.lock.BrokenSpinLockCounter.locked boolean:16>, accessed: false, read: false, written: true, folded: false>, location: -1>
      # at node: 9|FieldOffset { field=HostedField<BrokenSpinLockCounter.locked -> AnalysisField<BrokenSpinLockCounter.locked -> HotSpotResolvedJavaFieldImpl<com.github.mstepan.template.lock.BrokenSpinLockCounter.locked boolean:16>, accessed: false, read: false, written: true, folded: false>, location: -1>, stamp=i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,  }
      #
      - name: Native build with Maven
        run: mvn -B clean package --file pom.xml -Pnative -DskipTests
